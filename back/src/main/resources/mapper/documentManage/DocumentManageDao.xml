<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.documentManage.dao.DocumentManageDao">
  <sql id="documentManageColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.document_name AS "documentName",
      a.project_id AS "projectId",
      pl.project_name AS "projectName",
      a.milestone_id AS "milestoneId",
      mm.milestone_name AS "milestoneName",
      a.schedule_id AS "scheduleId",
      sm.schedule_name AS "scheduleName",
      a.document_type AS "documentType",
      sdi.name AS "documenttypeName",
      a.demand_id AS "demandId",
      rm.requirement_name AS "requirementName",
      a.document_description AS "documentDescription",
      a.annex AS "annex",
      sf.id AS "annexId",
      sf.name AS "annexName",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag" ,
    </trim>
  </sql>
  <sql id="documentManageJoins">
    left join project_list pl on a.project_id = pl.project_code
    left join milestone_manage mm on a.milestone_id = mm.id
    left join schedule_manage sm on a.schedule_id = sm.id
    left join requirement_manage rm on rm.id = a.demand_id
    left join sys_dict_item sdi on sdi.id = a.document_type and dict_type_id = '10010101'
    <!--left join sys_file sf on a.annex = cast(sf.object_id as char) and sf.del_flag != '1'-->
    left join (select object_id,group_concat(id) as id,group_concat(name) as name from sys_file sfs where sfs.del_flag != '1'  group by object_id) sf
	on a.annex = cast(sf.object_id as char)
  </sql>

  <!--checkrolebyid-->
  <select id="checkrolebyid" resultType="Integer">
    select count(1)  from sys_user su
    left join sys_user_role sur on su.id = sur.user_id
    left join sys_role sr on sur.role_id = sr.id
    where su.id =#{userid} and sr.code='admin'
  </select>

  <select id="get" resultType="com.geeke.documentManage.entity.DocumentManage">
    SELECT
    <include refid="documentManageColumns" />
    FROM document_manage a
    <include refid="documentManageJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM document_manage a
    <include refid="documentManageJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <if test="extra != null and extra !=''">
        and pl.project_manager = #{extra}
      </if>
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.documentManage.entity.DocumentManage">
    SELECT
    <include refid="documentManageColumns" />
    FROM document_manage a
    <include refid="documentManageJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <if test="extra != null and extra !=''">
        and pl.project_manager = #{extra}
      </if>
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.create_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.documentManage.entity.DocumentManage">
    SELECT
    <include refid="documentManageColumns" />
    FROM document_manage a
    <include refid="documentManageJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <if test="extra != null and extra !=''">
        and pl.project_manager = #{extra}
      </if>
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.create_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO document_manage(
    <trim suffixOverrides=",">
      id,
      document_name,
      project_id,
      milestone_id,
      schedule_id,
      document_type,
      demand_id,
      document_description,
      annex,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ documentName },
      #{ projectId },
      #{ milestoneId },
      #{ scheduleId },
      #{ documentType },
      #{ demandId },
      #{ documentDescription },
      #{ annex },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE document_manage SET
    <trim suffixOverrides=",">
      document_name = #{ documentName },
      project_id = #{ projectId },
      milestone_id = #{ milestoneId },
      schedule_id = #{ scheduleId },
      document_type = #{ documentType },
      demand_id = #{ demandId },
      document_description = #{ documentDescription },
      annex = #{ annex },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE document_manage SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO document_manage(
    <trim suffixOverrides=",">
      id,
      document_name,
      project_id,
      milestone_id,
      schedule_id,
      document_type,
      demand_id,
      document_description,
      annex,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.documentName},
        #{entity.projectId},
        #{entity.milestoneId},
        #{entity.scheduleId},
        #{entity.documentType},
        #{entity.demandId},
        #{entity.documentDescription},
        #{entity.annex},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE document_manage
    <set>
      <trim prefix="document_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.documentName}
        </foreach>
      </trim>
      <trim prefix="project_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.projectId}
        </foreach>
      </trim>
      <trim prefix="milestone_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.milestoneId}
        </foreach>
      </trim>
      <trim prefix="schedule_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.scheduleId}
        </foreach>
      </trim>
      <trim prefix="document_type=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.documentType}
        </foreach>
      </trim>
      <trim prefix="demand_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.demandId}
        </foreach>
      </trim>
      <trim prefix="document_description=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.documentDescription}
        </foreach>
      </trim>
      <trim prefix="annex=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.annex}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE document_manage
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>