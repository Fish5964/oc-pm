<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.test.dao.LeaveDao">
    
    <sql id="leaveColumns">
        a.id AS "id",
        a.leaver AS "leaver.id",
        IFNULL(leaver.name,'') AS "leaver.name",
        a.name AS "name",
        a.days AS "days",
        a.proc_inst AS "procInst",
        a.proc_status AS "procStatus.id",
        IFNULL(procStatus.name,'') AS "procStatus.name",
        procStatus.value AS "procStatus.value",
        a.remarks AS "remarks",
        a.create_by AS "createBy",
        a.create_date AS "createDate",
        a.update_by AS "updateBy",
        a.update_date AS "updateDate",
        a.del_flag AS "delFlag"
    </sql>
    
    <sql id="leaveJoins">
        LEFT JOIN sys_user leaver ON leaver.id = a.leaver
        LEFT JOIN sys_dict_item procStatus ON procStatus.id = a.proc_status
    </sql>
    
    <select id="get" resultType="com.geeke.test.entity.Leave">
        SELECT 
            <include refid="leaveColumns"/>
        FROM test_leave a
        <include refid="leaveJoins"/>
        WHERE a.id = #{id}
    </select>
    
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM test_leave a
        <include refid="leaveJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
    </select>    
    
    <select id="listPage" resultType="com.geeke.test.entity.Leave">
        SELECT 
            <include refid="leaveColumns"/>
        FROM test_leave a
        <include refid="leaveJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
        <choose>
            <when test="order != null and order != ''">
                ORDER BY ${order}
            </when>            
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
        LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <select id="listAll" resultType="com.geeke.test.entity.Leave">
        SELECT 
            <include refid="leaveColumns"/>
        FROM test_leave a
        <include refid="leaveJoins"/>
        <where>
            1=1
            AND a.id > 0
            AND a.del_flag = #{DEL_FLAG_NORMAL}
            <include refid="Common.whereParams"/>
        </where>
        <choose>
            <when test="order != null and order != ''">
                ORDER BY ${order}
            </when> 
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>
      
    <insert id="insert">
        INSERT INTO test_leave(
            id,
            leaver,
            name,
            days,
            proc_inst,
            proc_status,
            remarks,
            create_by,
            create_date,
            update_by,
            update_date,
            del_flag
        ) VALUES (
            #{id},
            #{leaver.id},                    
            #{name},
            #{days},
            #{procInst},
            #{procStatus.id},                    
            #{remarks},
            #{createBy},
            #{createDate},
            #{updateBy},
            #{updateDate},
            #{delFlag}
        )
    </insert>
    
    <update id="update">
        UPDATE test_leave SET     
            leaver = #{leaver.id},                    
            name = #{name},
            days = #{days},
            proc_inst = #{procInst},
            proc_status = #{procStatus.id},                    
            remarks = #{remarks},
            update_by = #{updateBy},
            update_date = #{updateDate}
        WHERE id = #{id}
    </update>
    
    <update id="delete">
        UPDATE test_leave SET
            update_by = #{updateBy},
            update_date = #{updateDate},
            del_flag = #{DEL_FLAG_DELETE}
        WHERE id = #{id}
    </update>
        
    <insert id="bulkInsert" parameterType="java.util.List">
        INSERT INTO test_leave(
            id,
            leaver,
            name,
            days,
            proc_inst,
            proc_status,
            remarks,
            create_by,
            create_date,
            update_by,
            update_date,
            del_flag
        ) VALUES 
        <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
        (
            #{entity.id},
            #{entity.leaver.id},                    
            #{entity.name},
            #{entity.days},
            #{entity.procInst},
            #{entity.procStatus.id},                    
            #{entity.remarks},
            #{entity.createBy},
            #{entity.createDate},
            #{entity.updateBy},
            #{entity.updateDate},
            #{entity.delFlag}
        )
        </foreach>
    </insert>
    
    <update id="bulkUpdate" parameterType="java.util.List">    
        UPDATE test_leave
        <set>           
            <trim prefix="leaver=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.leaver.id}
                </foreach>
            </trim>
            <trim prefix="name=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.name}
                </foreach>
            </trim>
            <trim prefix="days=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.days}
                </foreach>
            </trim>
            <trim prefix="proc_inst=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.procInst}
                </foreach>
            </trim>
            <trim prefix="proc_status=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.procStatus.id}
                </foreach>
            </trim>
            <trim prefix="remarks=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.remarks}
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateDate}
                </foreach>
            </trim>
        </set>
        WHERE id IN
        <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
            #{entity.id}
        </foreach>
    </update>
    
    
    <update id="bulkDelete" parameterType="java.util.List">
        UPDATE test_leave
        <set>
            <trim prefix="del_flag=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then 1
                </foreach>
            </trim>
            <trim prefix="update_by=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_date=case" suffix="end,">
                <foreach collection="entitys" item="entity" index="index">
                    when id=#{entity.id} then #{entity.updateDate}
                </foreach>
            </trim>
        </set>
        WHERE id IN
        <foreach collection="entitys" item="entity" index="index" separator="," open="(" close=")">
            #{entity.id}
        </foreach>
    </update>
    
    
</mapper>