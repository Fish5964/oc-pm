<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.progress.dao.ProgressReportDao">
  <sql id="progressReportColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.project_id AS "project.id",
      IFNULL(project.project_name,'') AS "project.projectName",
      IFNULL(project.project_code,'') AS "project.projectCode",
      date_format(project.plan_begin_date, '%Y-%m-%d') AS "project.planBeginDate",
      date_format(project.plan_end_date, '%Y-%m-%d') AS "project.planEndDate",
      a.milestone_id AS "milestone.id",
      IFNULL(milestone.milestone_name,'') AS "milestone.milestoneName",
      IFNULL(milestone.milestone_status,'') AS "milestone.milestoneStatus",
      IFNULL(milestone.progress_rate,'') AS "milestone.progressRate",
      a.milestone_progress AS "milestoneProgress",
      a.progress_desc AS "progressDesc",
      a.issues_and_reasons AS "issuesAndReasons",
      a.solution AS "solution",
      a.next_phase_plan AS "nextPhasePlan",
      a.annex AS "annex",
      a.progress_status AS "progressStatus",
      a.proc_inst AS "procInst",
      a.proc_status AS "procStatus.id",
      IFNULL(procStatus.name,'') AS "procStatus.name",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.total_rate AS "totalRate",
      a.del_flag AS "delFlag",
      a.reporting_theme AS "reportingTheme",
      project.project_status AS "project.projectStatus.id",
      IFNULL(projectStatus.name,'') AS "project.projectStatus.name",
      IFNULL(projectStatus.value,'') AS "project.projectStatus.value",
      project.project_manager AS "project.projectManager.id",
      IFNULL(projectManager.name,'') AS "project.projectManager.name",
      a.reporter_id AS "reporter.id",
      IFNULL(reporter.name,'') AS "reporter.name",
    </trim>

  </sql>

  <sql id="progressReportJoins">
    inner JOIN project_list project ON project.id = a.project_id
    LEFT JOIN milestone_manage milestone ON milestone.id = a.milestone_id
    LEFT JOIN sys_dict_item procStatus ON procStatus.id = a.proc_status
    LEFT JOIN sys_user projectManager ON projectManager.id = project.project_manager
    LEFT JOIN sys_dict_item projectStatus ON projectStatus.id = project.project_status
    LEFT JOIN sys_user `reporter` ON reporter.id = a.reporter_id
  </sql>



  <select id="getProjectProgress" resultType="com.geeke.progress.entity.ProjectProgress">
    select a.id             AS   "milestoneId",
           a.project_id     AS   "projectId",
           a.progress_rate  AS   "progressRate",
           a.milestone_name AS   "milestoneName"
    FROM milestone_manage a
    where
      a.del_flag = 0
      and a.project_id = #{projectId}
  </select>


  <select id="getMilestoneProgressById" resultType="com.geeke.progress.entity.ProjectProgress">
    select a.id             AS   "milestoneId",
           a.project_id     AS   "projectId",
           a.progress_rate  AS   "progressRate",
           a.milestone_name AS   "milestoneName"
    FROM milestone_manage a
    where
      a.del_flag = 0
      and a.id = #{milestoneId}
  </select>

  <select id="getMilestoneByProjectId" resultType="com.geeke.projectManage.entity.MilestoneManage">
    select
      a.id AS "id",
      a.project_id AS "project.id",
      a.milestone_name AS "milestoneName"
    FROM milestone_manage a
    where
      a.del_flag = 0 and a.project_id = #{projectId}

  </select>

  <select id="get" resultType="com.geeke.progress.entity.ProgressReport">
    SELECT
    <include refid="progressReportColumns" />
    FROM progress_report a
    <include refid="progressReportJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM progress_report a
    <include refid="progressReportJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.progress.entity.ProgressReport">
    SELECT
    <include refid="progressReportColumns" />
    FROM progress_report a
    <include refid="progressReportJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.progress.entity.ProgressReport">
    SELECT
    <include refid="progressReportColumns" />
    FROM progress_report a
    <include refid="progressReportJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO progress_report(
    <trim suffixOverrides=",">
      id,
      project_id,
      milestone_id,
      milestone_progress,
      progress_desc,
      issues_and_reasons,
      solution,
      next_phase_plan,
      annex,
      progress_status,
      proc_inst,
      proc_status,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      reporting_theme,
      total_rate,
      reporter_id,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ project.id },
      #{ milestone.id },
      #{ milestoneProgress },
      #{ progressDesc },
      #{ issuesAndReasons },
      #{ solution },
      #{ nextPhasePlan },
      #{ annex },
      #{ progressStatus },
      #{ procInst },
      #{ procStatus.id },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
      #{ reportingTheme },
      #{ totalRate },
      #{ reporter.id },

    </trim>
    )
  </insert>
  <update id="update">
    UPDATE progress_report SET
    <trim suffixOverrides=",">
      project_id = #{ project.id },
      milestone_id = #{ milestone.id },
      milestone_progress = #{ milestoneProgress },
      progress_desc = #{ progressDesc },
      issues_and_reasons = #{ issuesAndReasons },
      solution = #{ solution },
      next_phase_plan = #{ nextPhasePlan },
      annex = #{ annex },
      progress_status = #{ progressStatus },
      proc_inst = #{ procInst },
      proc_status = #{ procStatus.id },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
      reporting_theme = #{ reportingTheme },
      total_rate = #{ totalRate },
      reporter_id = #{ reporter.id },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE progress_report SET
                             update_by = #{updateBy},
                             update_date = #{updateDate},
                             del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id} and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO progress_report(
    <trim suffixOverrides=",">
      id,
      project_id,
      milestone_id,
      milestone_progress,
      progress_desc,
      issues_and_reasons,
      solution,
      next_phase_plan,
      annex,
      progress_status,
      proc_inst,
      proc_status,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
      reporting_theme,
      total_rate,
      reporter_id,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.project.id},
        #{entity.milestone.id},
        #{entity.milestoneProgress},
        #{entity.progressDesc},
        #{entity.issuesAndReasons},
        #{entity.solution},
        #{entity.nextPhasePlan},
        #{entity.annex},
        #{entity.progressStatus},
        #{entity.procInst},
        #{entity.procStatus.id},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
        #{entity.reportingTheme},
        #{entity.totalRate},
        #{entity.reporter.id},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE progress_report
    <set>
      <trim prefix="project_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.project.id}
        </foreach>
      </trim>
      <trim prefix="milestone_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.milestone.id}
        </foreach>
      </trim>
      <trim prefix="milestone_progress=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.milestoneProgress}
        </foreach>
      </trim>
      <trim prefix="progress_desc=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.progressDesc}
        </foreach>
      </trim>
      <trim prefix="issues_and_reasons=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.issuesAndReasons}
        </foreach>
      </trim>
      <trim prefix="solution=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.solution}
        </foreach>
      </trim>
      <trim prefix="next_phase_plan=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.nextPhasePlan}
        </foreach>
      </trim>
      <trim prefix="annex=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.annex}
        </foreach>
      </trim>
      <trim prefix="progress_status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.progressStatus}
        </foreach>
      </trim>
      <trim prefix="proc_inst=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.procInst}
        </foreach>
      </trim>
      <trim prefix="proc_status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.procStatus.id}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
      <trim prefix="reporting_theme=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.reportingTheme}
        </foreach>
      </trim>
      <trim prefix="total_rate=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.totalRate}
        </foreach>
      </trim>
      <trim prefix="reporter_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.reporter.id}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE progress_report
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>