<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.projectManage.dao.ScheduleManageDao">
  <sql id="scheduleManageColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.milestone_id AS "milestone.id",
      IFNULL(milestone.project_id,'') AS "milestone.projectId",
      IFNULL(milestone.milestone_name,'') AS "milestone.milestoneName",
      a.schedule_name AS "scheduleName",
      a.schedule_status AS "scheduleStatus.id",
      IFNULL(scheduleStatus.name,'') AS "scheduleStatus.name",
      IFNULL(scheduleStatus.value,'') AS "scheduleStatus.value",
      IFNULL(scheduleStatus.dict_type_id,'') AS "scheduleStatus.dictTypeId",
      a.schedule_type AS "scheduleType.id",
      IFNULL(scheduleType.name,'') AS "scheduleType.name",
      IFNULL(scheduleType.value,'') AS "scheduleType.value",
      IFNULL(scheduleType.dict_type_id,'') AS "scheduleType.dictTypeId",
      date_format(a.plan_begin, '%Y-%m-%d') AS "planBegin",
      date_format(a.plan_end, '%Y-%m-%d') AS "planEnd",
      date_format(a.real_begin, '%Y-%m-%d') AS "realBegin",
      date_format(a.real_end, '%Y-%m-%d') AS "realEnd",
      a.schedule_desc AS "scheduleDesc",
      (
		select group_concat(distinct t2.name)
		from team_member t1
		left join sys_user t2 on t2.id = t1.user_id
		where find_in_set(t1.user_id, a.participants)
      ) AS "participants",
      a.participants as "participantIds",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="scheduleManageJoins">
    LEFT JOIN milestone_manage milestone ON milestone.id = a.milestone_id
    LEFT JOIN sys_dict_item scheduleStatus ON scheduleStatus.id = a.schedule_status
    LEFT JOIN sys_dict_item scheduleType ON scheduleType.id = a.schedule_type
  </sql>
  <select id="get" resultType="com.geeke.projectManage.entity.ScheduleManage">
    SELECT
    <include refid="scheduleManageColumns" />
    FROM schedule_manage a
    <include refid="scheduleManageJoins" />
    WHERE a.id = #{id}
  </select>

  <select id="getscheduleByid" resultType="com.geeke.projectManage.entity.ScheduleManage">
    SELECT
    <include refid="scheduleManageColumns" />
    FROM schedule_manage a
    inner join milestone_manage pl on a.milestone_id = pl.id
    <include refid="scheduleManageJoins" />
    WHERE pl.id = #{id}
  </select>

  <select id="count" resultType="int">
    SELECT COUNT(*) FROM schedule_manage a
    <include refid="scheduleManageJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.projectManage.entity.ScheduleManage">
    SELECT
    <include refid="scheduleManageColumns" />
    FROM schedule_manage a
    <include refid="scheduleManageJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.create_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.projectManage.entity.ScheduleManage">
    SELECT
    <include refid="scheduleManageColumns" />
    FROM schedule_manage a
    <include refid="scheduleManageJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.create_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO schedule_manage(
    <trim suffixOverrides=",">
      id,
      milestone_id,
      schedule_name,
      schedule_status,
      schedule_type,
      plan_begin,
      plan_end,
      real_begin,
      real_end,
      schedule_desc,
      participants,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ milestone.id },
      #{ scheduleName },
      1859848726116008003,
      #{ scheduleType.id },
      #{ planBegin },
      #{ planEnd },
      #{ realBegin },
      #{ realEnd },
      #{ scheduleDesc },
      #{ participants },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE schedule_manage SET
    <trim suffixOverrides=",">
      milestone_id = #{ milestone.id },
      schedule_name = #{ scheduleName },
      schedule_status = #{ scheduleStatus.id },
      schedule_type = #{ scheduleType.id },
      plan_begin = #{ planBegin },
      plan_end = #{ planEnd },
      real_begin = #{ realBegin },
      real_end = #{ realEnd },
      schedule_desc = #{ scheduleDesc },
      participants = #{ participants },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE schedule_manage SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO schedule_manage(
    <trim suffixOverrides=",">
      id,
      milestone_id,
      schedule_name,
      schedule_status,
      schedule_type,
      plan_begin,
      plan_end,
      real_begin,
      real_end,
      schedule_desc,
      participants,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.milestone.id},
        #{entity.scheduleName},
        1859848726116008003,
        #{entity.scheduleType.id},
        #{entity.planBegin},
        #{entity.planEnd},
        #{entity.realBegin},
        #{entity.realEnd},
        #{entity.scheduleDesc},
        #{entity.participants},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE schedule_manage
    <set>
      <trim prefix="milestone_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.milestone.id}
        </foreach>
      </trim>
      <trim prefix="schedule_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.scheduleName}
        </foreach>
      </trim>
      <trim prefix="schedule_status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.scheduleStatus.id}
        </foreach>
      </trim>
      <trim prefix="schedule_type=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.scheduleType.id}
        </foreach>
      </trim>
      <trim prefix="plan_begin=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.planBegin}
        </foreach>
      </trim>
      <trim prefix="plan_end=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.planEnd}
        </foreach>
      </trim>
      <trim prefix="real_begin=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.realBegin}
        </foreach>
      </trim>
      <trim prefix="real_end=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.realEnd}
        </foreach>
      </trim>
      <trim prefix="schedule_desc=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.scheduleDesc}
        </foreach>
      </trim>
      <trim prefix="participants=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.participants}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE schedule_manage
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="modifyScheduleStatus" parameterType="com.geeke.projectManage.entity.vo.ScheduleVO">
    update schedule_manage
    set schedule_status = #{status}
    <choose>
      <when test="status == '1859848726116008004'">
        ,real_begin = now()
      </when>
      <when test="status == '1859848726116008003'">
        ,real_begin = null
      </when>
      <when test="status == '1859848726116008005'">
        ,real_end = now()
      </when>
    </choose>
    where id in (${ids})
  </update>
</mapper>
