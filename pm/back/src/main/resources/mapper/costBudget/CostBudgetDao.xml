<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.costBudget.dao.CostBudgetDao">
  <sql id="costBudgetColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.project_id AS "projectId",
      a.budget_date AS "budgetDate",
      a.per_invest_budget AS "perInvestBudget",
      a.per_invest_real AS "perInvestReal",
      a.per_cost_budget AS "perCostBudget",
      a.per_cost_real AS "perCostReal",
      a.shop_paid_budget AS "shopPaidBudget",
      a.shop_paid_real AS "shopPaidReal",
      a.other_paid_budget AS "otherPaidBudget",
      a.other_paid_real AS "otherPaidReal",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="costBudgetJoins">
  </sql>
  <select id="get" resultType="com.geeke.costBudget.entity.CostBudget">
    SELECT
    <include refid="costBudgetColumns" />
    FROM cost_budget a
    <include refid="costBudgetJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="getByProjectId" resultType="com.geeke.costBudget.entity.CostBudget">
    SELECT a.*
    FROM cost_budget a
    WHERE a.project_id = #{projectId}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM cost_budget a
    <include refid="costBudgetJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.costBudget.entity.CostBudget">
    SELECT
    <include refid="costBudgetColumns" />
    FROM cost_budget a
    <include refid="costBudgetJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.budget_date ASC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.costBudget.entity.CostBudget">
    SELECT
    <include refid="costBudgetColumns" />
    FROM cost_budget a
    <include refid="costBudgetJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.budget_date ASC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO cost_budget(
    <trim suffixOverrides=",">
      id,
      project_id,
      budget_date,
      per_invest_budget,
      per_invest_real,
      per_cost_budget,
      per_cost_real,
      shop_paid_budget,
      shop_paid_real,
      other_paid_budget,
      other_paid_real,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ projectId },
      #{ budgetDate },
      #{ perInvestBudget },
      #{ perInvestReal },
      #{ perCostBudget },
      #{ perCostReal },
      #{ shopPaidBudget },
      #{ shopPaidReal },
      #{ otherPaidBudget },
      #{ otherPaidReal },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE cost_budget SET
    <trim suffixOverrides=",">
      project_id = #{ projectId },
      budget_date = #{ budgetDate },
      per_invest_budget = #{ perInvestBudget },
      per_invest_real = #{ perInvestReal },
      per_cost_budget = #{ perCostBudget },
      per_cost_real = #{ perCostReal },
      shop_paid_budget = #{ shopPaidBudget },
      shop_paid_real = #{ shopPaidReal },
      other_paid_budget = #{ otherPaidBudget },
      other_paid_real = #{ otherPaidReal },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE cost_budget SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO cost_budget(
    <trim suffixOverrides=",">
      id,
      project_id,
      budget_date,
      per_invest_budget,
      per_invest_real,
      per_cost_budget,
      per_cost_real,
      shop_paid_budget,
      shop_paid_real,
      other_paid_budget,
      other_paid_real,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.projectId},
        #{entity.budgetDate},
        #{entity.perInvestBudget},
        #{entity.perInvestReal},
        #{entity.perCostBudget},
        #{entity.perCostReal},
        #{entity.shopPaidBudget},
        #{entity.shopPaidReal},
        #{entity.otherPaidBudget},
        #{entity.otherPaidReal},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE cost_budget
    <set>
      <trim prefix="project_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.projectId}
        </foreach>
      </trim>
      <trim prefix="budget_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.budgetDate}
        </foreach>
      </trim>
      <trim prefix="per_invest_budget=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.perInvestBudget}
        </foreach>
      </trim>
      <trim prefix="per_invest_real=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.perInvestReal}
        </foreach>
      </trim>
      <trim prefix="per_cost_budget=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.perCostBudget}
        </foreach>
      </trim>
      <trim prefix="per_cost_real=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.perCostReal}
        </foreach>
      </trim>
      <trim prefix="shop_paid_budget=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.shopPaidBudget}
        </foreach>
      </trim>
      <trim prefix="shop_paid_real=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.shopPaidReal}
        </foreach>
      </trim>
      <trim prefix="other_paid_budget=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.otherPaidBudget}
        </foreach>
      </trim>
      <trim prefix="other_paid_real=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.otherPaidReal}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE cost_budget
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>