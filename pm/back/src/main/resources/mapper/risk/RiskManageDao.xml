<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geeke.risk.dao.RiskManageDao">
  <sql id="riskManageColumns">
    <trim suffixOverrides=",">
      a.id AS "id",
      a.project_id AS "projectId",
      a.project_id AS "project.id",
      IFNULL(project.project_name,'') AS "project.projectName",
      IFNULL(project.project_short_name,'') AS "project.projectShortName",
      IFNULL(project.project_code,'') AS "project.projectCode",
      a.risk_name AS "riskName",
      a.risk_code AS "riskCode",
      a.milestone_id AS "milestoneId",
      a.schedule_id AS "scheduleId",
      a.risk_type AS "riskType",
      a.risk_impact AS "riskImpact",
      a.risk_status AS "riskStatus",
      a.risk_text AS "riskText",
      a.risk_option AS "riskOption",
      a.file_id AS "fileId",
      a.remarks AS "remarks",
      a.create_by AS "createBy",
      a.create_date AS "createDate",
      a.update_by AS "updateBy",
      a.update_date AS "updateDate",
      a.del_flag AS "delFlag",
    </trim>
  </sql>
  <sql id="riskManageJoins">
    LEFT JOIN project_list project ON project.id = a.project_id
  </sql>
  <select id="get" resultType="com.geeke.risk.entity.RiskManage">
    SELECT
    <include refid="riskManageColumns" />
    FROM risk_manage a
    <include refid="riskManageJoins" />
    WHERE a.id = #{id}
  </select>
  <select id="count" resultType="int">
    SELECT COUNT(*) FROM risk_manage a
    <include refid="riskManageJoins" />
    <where>
      1=1
      AND project.project_status in (2, 3, 4)
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
  </select>
  <select id="listPage" resultType="com.geeke.risk.entity.RiskManage">
    SELECT
    <include refid="riskManageColumns" />
    FROM risk_manage a
    <include refid="riskManageJoins" />
    <where>
      1=1
      AND project.project_status in (2, 3, 4)
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
    LIMIT #{limit} OFFSET #{offset}
  </select>
  <select id="listAll" resultType="com.geeke.risk.entity.RiskManage">
    SELECT
    <include refid="riskManageColumns" />
    FROM risk_manage a
    <include refid="riskManageJoins" />
    <where>
      1=1
      AND a.id > 0
      AND a.del_flag = #{DEL_FLAG_NORMAL}
      <include refid="Common.whereParams" />
    </where>
    <choose>
      <when test="order != null and order != ''">
        ORDER BY ${order}
      </when>
      <otherwise>
        ORDER BY a.update_date DESC
      </otherwise>
    </choose>
  </select>
  <insert id="insert">
    INSERT INTO risk_manage(
    <trim suffixOverrides=",">
      id,
      project_id,
      risk_name,
      risk_code,
      milestone_id,
      schedule_id,
      risk_type,
      risk_impact,
      risk_status,
      risk_text,
      risk_option,
      file_id,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES (
    <trim suffixOverrides=",">
      #{ id },
      #{ projectId },
      #{ riskName },
      #{ riskCode },
      #{ milestoneId },
      #{ scheduleId },
      #{ riskType },
      #{ riskImpact },
      #{ riskStatus },
      #{ riskText },
      #{ riskOption },
      #{ fileId },
      #{ remarks },
      #{ createBy },
      #{ createDate },
      #{ updateBy },
      #{ updateDate },
      #{ delFlag },
    </trim>
    )
  </insert>
  <update id="update">
    UPDATE risk_manage SET
    <trim suffixOverrides=",">
      project_id = #{ projectId },
      risk_name = #{ riskName },
      risk_code = #{ riskCode },
      milestone_id = #{ milestoneId },
      schedule_id = #{ scheduleId },
      risk_type = #{ riskType },
      risk_impact = #{ riskImpact },
      risk_status = #{ riskStatus },
      risk_text = #{ riskText },
      risk_option = #{ riskOption },
      file_id = #{ fileId },
      remarks = #{ remarks },
      update_by = #{ updateBy },
      update_date = #{ updateDate },
    </trim>
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <update id="delete">
    UPDATE risk_manage SET
    update_by = #{updateBy},
    update_date = #{updateDate},
    del_flag = #{DEL_FLAG_DELETE}
    WHERE id = #{id}
    and update_date = #{oldUpdateDate}
  </update>
  <insert id="bulkInsert" parameterType="java.util.List">
    INSERT INTO risk_manage(
    <trim suffixOverrides=",">
      id,
      project_id,
      risk_name,
      risk_code,
      milestone_id,
      schedule_id,
      risk_type,
      risk_impact,
      risk_status,
      risk_text,
      risk_option,
      file_id,
      remarks,
      create_by,
      create_date,
      update_by,
      update_date,
      del_flag,
    </trim>
    ) VALUES
    <foreach collection="entitys" index="index" item="entity" open="" separator="," close="">
      (
      <trim suffixOverrides=",">
        #{entity.id},
        #{entity.projectId},
        #{entity.riskName},
        #{entity.riskCode},
        #{entity.milestoneId},
        #{entity.scheduleId},
        #{entity.riskType},
        #{entity.riskImpact},
        #{entity.riskStatus},
        #{entity.riskText},
        #{entity.riskOption},
        #{entity.fileId},
        #{entity.remarks},
        #{entity.createBy},
        #{entity.createDate},
        #{entity.updateBy},
        #{entity.updateDate},
        #{entity.delFlag},
      </trim>
      )
    </foreach>
  </insert>
  <update id="bulkUpdate" parameterType="java.util.List">
    UPDATE risk_manage
    <set>
      <trim prefix="project_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.projectId}
        </foreach>
      </trim>
      <trim prefix="risk_name=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.riskName}
        </foreach>
      </trim>
      <trim prefix="risk_code=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.riskCode}
        </foreach>
      </trim>
      <trim prefix="milestone_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.milestoneId}
        </foreach>
      </trim>
      <trim prefix="schedule_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.scheduleId}
        </foreach>
      </trim>
      <trim prefix="risk_type=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.riskType}
        </foreach>
      </trim>
      <trim prefix="risk_impact=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.riskImpact}
        </foreach>
      </trim>
      <trim prefix="risk_status=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.riskStatus}
        </foreach>
      </trim>
      <trim prefix="risk_text=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.riskText}
        </foreach>
      </trim>
      <trim prefix="risk_option=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.riskOption}
        </foreach>
      </trim>
      <trim prefix="file_id=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.fileId}
        </foreach>
      </trim>
      <trim prefix="remarks=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.remarks}
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
  <update id="bulkDelete" parameterType="java.util.List">
    UPDATE risk_manage
    <set>
      <trim prefix="del_flag=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then 1
        </foreach>
      </trim>
      <trim prefix="update_by=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateBy}
        </foreach>
      </trim>
      <trim prefix="update_date=case" suffix="end,">
        <foreach collection="entitys" item="entity" index="index">
          when id=#{entity.id} then #{entity.updateDate}
        </foreach>
      </trim>
    </set>
    WHERE
    <foreach collection="entitys" item="entity" index="index" separator="OR" open="(" close=")">
      id = #{entity.id} and update_date = #{entity.oldUpdateDate}
    </foreach>
  </update>
</mapper>